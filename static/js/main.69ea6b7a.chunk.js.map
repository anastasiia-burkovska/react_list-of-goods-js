{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAAyBC,EAAzB,GAA2D,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACrCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMcO,CACnBlB,EACA,CAAEK,YAAWE,cAYf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYhB,IAAcJ,IAG9BqB,QAAS,kBAAMhB,EAAaL,IAT9B,iCAcA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYhB,IAAcH,IAG9BoB,QAAS,kBAAMhB,EAAaJ,IAT9B,4BAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QA1CQ,WACdd,GAAcD,IAkCV,sBAYEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAxDI,WACZd,GAAa,GACbF,EAAa,KAmDP,sBAUJ,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCtHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69ea6b7a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepareGoods(goods, { sortField, isReverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPrepareGoods(\n    goodsFromServer,\n    { sortField, isReverse },\n  );\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortField('');\n  };\n\n  const reverse = () => {\n    setIsReverse(!isReverse);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortField !== SORT_FIELD_NAME,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortField !== SORT_FIELD_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}